buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.fullstack'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17s'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'


	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

 	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    annotationProcessor(

            "jakarta.persistence:jakarta.persistence-api",

            "jakarta.annotation:jakarta.annotation-api",

            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

	
 	implementation'com.google.code.gson:gson:2.11.0'; 
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.6'

	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.4.1'
	implementation 'org.webjars:webjars-locator-core:0.59'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation group: 'org.apache.poi', name: 'poi', version: '5.3.0'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.3.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
	implementation 'org.modelmapper:modelmapper:3.2.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

//start
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

compileJava.dependsOn('clean')
//end
